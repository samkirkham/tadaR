% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backward_difference.R
\name{backward_difference}
\alias{backward_difference}
\title{Calculate backward difference of a signal}
\usage{
backward_difference(x, sampling_rate, replace_last = NA, abs = FALSE)
}
\arguments{
\item{x}{numeric input}

\item{sampling_rate}{sampling rate in Hz (numeric)}

\item{replace_last}{numeric value used to replace NA in last cell (default is NA)}

\item{abs}{return absolute values (default is FALSE)}
}
\description{
Calculate backward difference of a signal
}
\note{
As backward_difference calculates the difference between points, it does not by default return a difference value for the final value of a signal, because it cannot be differenced against a value that follows it. Use central_difference for reliable differencing across the entire signal.
}
\examples{
\dontrun{
# create time object with 0.005s step size (sampling_rate=200)
t <- seq(0, 1, by=0.005)
# compute sine wave over t
y <- sin(2*pi*t)
# calculate backward difference
backward_difference(y, sampling_rate=200)
backward_difference(y, sampling_rate=200, abs=TRUE)
# replace last cell with the last value of y
backward_difference(y, sampling_rate=200, replace_last = dplyr::last(y))
}
}
